library(TKP)
library(TKG)
library(tkp)
library(kgp))
library(kgp)
kgp::kgpmeta
library(tidyverse)
kgp::kgpmeta
kgp::kgpmeta %>% filter(reg == "EUR")
kgp::kgpmeta %>% filter(reg == "SAS")
install.packages("RefManageR")
library(RefManageR)
RefManageR::GetBibEntryWithDOI("10.1038/s41586-022-05165-3")
RefManageR::ReadPubMed("Stroke genetics informs drug discovery and risk prediction across ancestries")
pub <- RefManageR::ReadPubMed("Stroke genetics informs drug discovery and risk prediction across ancestries")
pub
pub$mishra2022stroke
pub
str(pub)
RefManageR::PrintBibliography(pub)
RefManageR::TextCite(pub)
bibtex::write.bib(pub, file = stdout())
RefManageR::WriteBib(pub, stdout())
class(pub)
RefManageR::WriteBib(pub,"tmp.bib")
RefManageR::ReadPubMed
library(RefManageR)
library(readr)
get_bib <- function(title, doi) {
tmp <- tempfile(fileext = "bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
} else if (!missing(doi)) {
GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
get_bib(title = "Stroke genetics informs drug discovery and risk prediction across ancestries")
get_bib <- function(title, doi) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
} else if (!missing(doi)) {
GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
get_bib(title = "Stroke genetics informs drug discovery and risk prediction across ancestries")
get_bib <- function(title, doi, pmid) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
} else if (!missing(doi)) {
GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE)
} else if (!missing(pmid)) {
x <- GetPubMedByID(pmid)
WriteBib(x, tmp)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
get_bib(pmid = 36138222)
get_bib(title = "Global Biobank Meta-analysis Initiative: Powering genetic discovery across human disease")
get_bib(doi = "10.1016/j.xgen.2022.100190")
get_bib <- function(title, doi, pmid) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
} else if (!missing(doi)) {
try(GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE))
} else if (!missing(pmid)) {
x <- GetPubMedByID(pmid)
WriteBib(x, tmp)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
get_bib(doi = "10.1016/j.xgen.2022.100190")
get_bib(doi = "10.1101/2021.11.30.21267108")
write_bib_texts <- function(..., out) {
write_lines(stringr::str_c(..., sep = "\n"), out)
}
write_bib_texts(
get_bib(doi = "10.1101/2021.11.30.21267108"), # GBMI asthma
get_bib(doi = "10.1101/2021.11.18.21266545"), # GBMI PRS
get_bib(doi = "10.1101/2021.12.16.21267891"), # GBMI POAG
out = "_bibliography/preprints.bib"
)
write_bib_texts <- function(..., out) {
write_lines(stringr::str_c(purrr::map_chr(list(...), stringr::str_c, collapse = "\n"), sep = "\n\n"), out)
}
write_bib_texts(
get_bib(doi = "10.1101/2021.11.30.21267108"), # GBMI asthma
get_bib(doi = "10.1101/2021.11.18.21266545"), # GBMI PRS
get_bib(doi = "10.1101/2021.12.16.21267891"), # GBMI POAG
out = "_bibliography/preprints.bib"
)
write_bib_texts <- function(..., out) {
write_lines(stringr::str_c(purrr::map_chr(list(...), stringr::str_c, collapse = "\n"), sep = "\n"), out)
}
write_bib_texts(
get_bib(doi = "10.1016/j.xgen.2022.100192"), # GBMI flagship
get_bib(doi = "10.1016/j.xgen.2022.100190"), # GBMI drugdiscov
get_bib(title = "Stroke genetics informs drug discovery and risk prediction across ancestries"),
get_bib(pmid = 36138222), # assortative mating
get_bib(pmid = 35995775), # COVID19-eQTL
get_bib(pmid = 35940203), # COVID19-DOCK2
get_bib(pmid = 35753705), # ARD DrShirai
get_bib(pmid = 34906514), # {P}olygenic risk scores for prediction of breast cancer risk in {A}sian populations
get_bib(pmid = 34811492), # MuSTA
get_bib(pmid = 33310976), # Allelgy JPT review
get_bib(pmid = 30637877), # Methylation in cancer
out = "_bibliography/publications.bib"
)
get_bib <- function(title, doi, pmid) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
Sys.sleep(5)
WriteBib(x, tmp)
} else if (!missing(doi)) {
try(GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE))
} else if (!missing(pmid)) {
x <- GetPubMedByID(pmid)
Sys.sleep(5)
WriteBib(x, tmp)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
write_bib_texts(
get_bib(doi = "10.1016/j.xgen.2022.100192"), # GBMI flagship
get_bib(doi = "10.1016/j.xgen.2022.100190"), # GBMI drugdiscov
get_bib(title = "Stroke genetics informs drug discovery and risk prediction across ancestries"),
get_bib(pmid = 36138222), # assortative mating
get_bib(pmid = 35995775), # COVID19-eQTL
get_bib(pmid = 35940203), # COVID19-DOCK2
get_bib(pmid = 35753705), # ARD DrShirai
get_bib(pmid = 34906514), # {P}olygenic risk scores for prediction of breast cancer risk in {A}sian populations
get_bib(pmid = 34811492), # MuSTA
get_bib(pmid = 33310976), # Allelgy JPT review
get_bib(pmid = 30637877), # Methylation in cancer
out = "_bibliography/publications.bib"
)
get_bib(pmid = 30637877)
get_bib <- function(title, doi, pmid) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
Sys.sleep(5)
} else if (!missing(doi)) {
try(GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE))
} else if (!missing(pmid)) {
x <- GetPubMedByID(pmid)
WriteBib(x, tmp)
Sys.sleep(10)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
write_bib_texts(
get_bib(doi = "10.1016/j.xgen.2022.100192"), # GBMI flagship
get_bib(doi = "10.1016/j.xgen.2022.100190"), # GBMI drugdiscov
get_bib(title = "Stroke genetics informs drug discovery and risk prediction across ancestries"),
get_bib(pmid = 36138222), # assortative mating
get_bib(pmid = 35995775), # COVID19-eQTL
get_bib(pmid = 35940203), # COVID19-DOCK2
get_bib(pmid = 35753705), # ARD DrShirai
get_bib(pmid = 34906514), # {P}olygenic risk scores for prediction of breast cancer risk in {A}sian populations
get_bib(pmid = 34811492), # MuSTA
get_bib(pmid = 33310976), # Allelgy JPT review
get_bib(pmid = 30637877), # Methylation in cancer
out = "_bibliography/publications.bib"
)
library(MetaSKAT)
library(RefManageR)
library(readr)
get_bib(doi = "10.1158/0008-5472.CAN-22-1492")
get_bib <- function(title, doi, pmid) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
Sys.sleep(5)
} else if (!missing(doi)) {
try(GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE))
} else if (!missing(pmid)) {
x <- GetPubMedByID(pmid)
WriteBib(x, tmp)
Sys.sleep(10)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
write_bib_texts <- function(..., out) {
write_lines(stringr::str_c(purrr::map_chr(list(...), stringr::str_c, collapse = "\n"), sep = "\n"), out)
}
get_bib(doi = "10.1158/0008-5472.CAN-22-1492")
get_bib(doi = "10.1158/0008-5472.CAN-22-1492") %>% cat("\n")
cat(get_bib(doi = "10.1158/0008-5472.CAN-22-1492"), "\n")
cat(get_bib(doi = "10.1158/0008-5472.CAN-22-1492"), sep = "\n")
library(RefManageR)
library(readr)
get_bib <- function(title, doi, pmid) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
Sys.sleep(5)
} else if (!missing(doi)) {
try(GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE))
} else if (!missing(pmid)) {
x <- GetPubMedByID(pmid)
WriteBib(x, tmp)
Sys.sleep(10)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
write_bib_texts <- function(..., out) {
write_lines(stringr::str_c(purrr::map_chr(list(...), stringr::str_c, collapse = "\n"), sep = "\n"), out)
}
cat
cat(get_bib(doi = "10.1126/sciadv.ade2780"), sep = "\n") # rs671
cat(get_bib(doi = "10.1038/s41588-023-01500-0"), sep = "\n") # PRSadjGWAS
cat(get_bib(doi = "10.1038/s41467-023-39136-7"), sep = "\n") # GSato PanCan
cat(get_bib(doi = "10.1136/ard-2023-224537"), sep = "\n") # Tanaka
cat(get_bib(doi = "10.1038/s41467-023-41857-8"), sep = "\n") # Sekita
cat(get_bib(doi = "10.1038/s41588-023-01375-1"), sep = "\n") # Edahiro scRNAseq
cat(get_bib(doi = "10.1101/2023.03.31.23287839"), sep = "\n") # Suzuki T2D Nature (preprint)
#   get_bib(pmid = 36138222), # K Yamamoto assortative mating
#   get_bib(pmid = 35995775), # COVID19-eQTL
#   get_bib(pmid = 35940203), # COVID19-DOCK2
#   get_bib(pmid = 35753705), # ARD DrShirai
#   get_bib(pmid = 34906514), # {P}olygenic risk scores for prediction of breast cancer risk in {A}sian populations
#   get_bib(pmid = 34811492), # MuSTA
#   get_bib(pmid = 33310976), # Allelgy JPT review
#   get_bib(pmid = 30637877), # Methylation in cancer
#   out = "_bibliography/publications.bib"
# )
write_bib_texts(
get_bib(doi = "10.1126/sciadv.ade2780"),  # rs671
get_bib(doi = "10.1038/s41588-023-01500-0"),  # PRSadjGWAS
get_bib(doi = "10.1038/s41467-023-39136-7"),  # GSato PanCan
get_bib(doi = "10.1136/ard-2023-224537"),  # Tanaka
get_bib(doi = "10.1038/s41467-023-41857-8"),  # Sekita
get_bib(doi = "10.1038/s41588-023-01375-1"),  # Edahiro scRNAseq
get_bib(doi = "10.1101/2023.03.31.23287839"), # Suzuki T2D Nature (preprint)
out = "_bibliography/tmp.bib"
)
get_bib <- function(title, doi, pmid) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
Sys.sleep(5)
} else if (!missing(doi)) {
try(GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE))
} else if (!missing(pmid)) {
x <- GetPubMedByID(pmid)
WriteBib(x, tmp)
Sys.sleep(10)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
source("~/Dropbox/shinichinamba/src/get_bibtex.R")
#   get_bib(pmid = 36138222), # K Yamamoto assortative mating
#   get_bib(pmid = 35995775), # COVID19-eQTL
#   get_bib(pmid = 35940203), # COVID19-DOCK2
#   get_bib(pmid = 35753705), # ARD DrShirai
#   get_bib(pmid = 34906514), # {P}olygenic risk scores for prediction of breast cancer risk in {A}sian populations
#   get_bib(pmid = 34811492), # MuSTA
#   get_bib(pmid = 33310976), # Allelgy JPT review
#   get_bib(pmid = 30637877), # Methylation in cancer
#   out = "_bibliography/publications.bib"
# )
write_bib_texts(
# get_bib(doi = "10.1126/sciadv.ade2780"),  # rs671
# get_bib(doi = "10.1038/s41588-023-01500-0"),  # PRSadjGWAS
# get_bib(doi = "10.1038/s41467-023-39136-7"),  # GSato PanCan
# get_bib(doi = "10.1136/ard-2023-224537"),  # Tanaka
# get_bib(doi = "10.1038/s41467-023-41857-8"),  # Sekita
# get_bib(doi = "10.1038/s41588-023-01375-1"),  # Edahiro scRNAseq
# get_bib(doi = "10.1101/2023.03.31.23287839"), # Suzuki T2D Nature (preprint)
# get_bib(doi = "10.1038/s41586-024-07019-6"), # Suzuki T2D Nature
# get_bib(doi = "10.1016/j.xcrm.2024.101430"), # GBMI POAG
# get_bib(doi = "10.1111/apt.17953"), # FIB4-EASL AP&T
get_bib(doi = "10.15036/arerugi.72.1110"), # Arerugi WGS pipeline
out = "_bibliography/tmp.bib"
)
library(RefManageR)
library(readr)
get_bib <- function(title, doi, pmid) {
tmp <- tempfile(fileext = ".bib")
if (!missing(title)) {
x <- RefManageR::ReadPubMed(title)
WriteBib(x, tmp)
Sys.sleep(5)
} else if (!missing(doi)) {
try(GetBibEntryWithDOI(doi, temp.file = tmp, delete.file = FALSE))
} else if (!missing(pmid)) {
x <- GetPubMedByID(pmid)
WriteBib(x, tmp)
Sys.sleep(10)
}
res <- read_lines(tmp)
unlink(tmp, force = TRUE)
res
}
write_bib_texts <- function(..., out) {
write_lines(stringr::str_c(purrr::map_chr(list(...), stringr::str_c, collapse = "\n"), sep = "\n"), out)
}
write_bib_texts <- function(..., out = stdout()) {
write_lines(stringr::str_c(purrr::map_chr(list(...), stringr::str_c, collapse = "\n"), sep = "\n"), out)
}
# 10.21203/rs.3.rs-4535534/v1 Ilana Caro prasma/CSF MR
write_bib_texts(
get_bib(doi = "10.1038/s41588-024-01782-y"), # Ojima T2D PRS
get_bib(doi = "10.1016/j.xgen.2024.100625"), # Tomofuji scLinax
get_bib(doi = "10.1136/jnnp-2024-333690"), # Cris Kato
get_bib(doi = "10.1038/s43856-024-00596-7"), # Naito causal forest
get_bib(doi = "10.1038/s41588-024-01896-3"), # Wang TF e/pQTL
get_bib(doi = "10.1038/s41562-024-02019-y") # Embryo PRS
)
write_bib_texts(doi = "10.21203/rs.3.rs-4535534/v1") # Ilana Caro prasma/CSF MR
write_bib_texts(get_bib(doi = "10.21203/rs.3.rs-4535534/v1")) # Ilana Caro prasma/CSF MR
